apply plugin: 'com.android.application'

android {
    compileSdkVersion 29


    defaultConfig {
        applicationId "net.helpgod.fragmenttest"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        javaMaxHeapSize "2048M"
        jumboMode true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'buildDate', "\"${getBuildTime()}\""
        }
        debug{
            buildConfigField 'String', 'buildDate', "\"${getBuildTime()}\""
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name.equals("release")) {
            variant.outputs.all { output ->
                outputFileName = new File(
                        outputFileName.replace(".apk", "_${variant.versionName}-" + getDate() + ".apk"))
            }
        } else {
            variant.outputs.all { output ->
                outputFileName = new File(
                        outputFileName.replace(".apk", "_${variant.versionName}-" + getDate() + ".apk"))
            }
        }
    }

    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta6'
    implementation 'com.markjmind.propose:propose:1.1.2'
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format("yyyyMMdd_HHmmss")
    return formattedDate
}

def getBuildTime() {
    def date = new Date()
    def formattedDate = date.format("yyyy.MM.dd HH:mm")
    return formattedDate
}
